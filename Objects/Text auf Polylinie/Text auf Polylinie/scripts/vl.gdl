! ********* PARAM SCRIPT ********* !! ******************************** !! === VALUES ===VALUES 'points' RANGE[2,]VALUES 'constraint' RANGE[EPS,]VALUES{2} "linetype3D", 1, "Volllinie", 0, "Gestrichelt"VALUES 'dashLen' RANGE[EPS,]VALUES 'gapLen' RANGE[EPS,]! === PENS ===IF pentext < 1 THEN	PARAMETERS pentext = 1ENDIFIF pen_fill < 1 THEN	PARAMETERS pen_fill = 1ENDIFIF pen_fillcont < 1 THEN	PARAMETERS pen_fillcont = 1ENDIFIF gs_cont_pen < 1 THEN	PARAMETERS gs_cont_pen = 1ENDIF! ---------------------------------------------------------------------- !! === FUNCTIONS FOR REDUCING ARRAYS ===! === DECLARE TEMP ARRAYS ===DIM reduceX[],	reduceY[],	reduceZ[],	reduceInsertX[],	reduceInsertY[],	reduceInsertZ[],	reduceInsertXPrev[],	reduceInsertYPrev[],	reduceInsertZPrev[],	reduceHypotenuse2D[],	reduceHypotenuse3D[],	reduceAlpha2D[],	reduceAlpha3D[]! === CHECK ARRAYS FOR NUMBER OF POINTS ===IF VARDIM1(x) > points+1 THEN	FOR i = 1 to points		reduceX[i]=x[i]		reduceY[i]=y[i]		reduceZ[i]=z[i]		reduceInsertX[i]=insertX[i]		reduceInsertY[i]=insertY[i]		reduceInsertZ[i]=insertZ[i]		reduceInsertXPrev[i]=InsertXPrev[i]		reduceInsertYPrev[i]=InsertYPrev[i]		reduceInsertZPrev[i]=InsertZPrev[i]		reduceHypotenuse2D[i]=hypotenuse2D[i]		reduceHypotenuse3D[i]=hypotenuse3D[i]		reduceAlpha2D[i]=alpha2D[i]		reduceAlpha3D[i]=alpha3D[i]	NEXT iENDIF! === GIVE STORED REDUCED VALUES TO ORIGINAL ARRAYS ===x = reduceXy = reduceYz = reduceZinsertX = reduceInsertXinsertY = reduceInsertYinsertZ = reduceInsertZinsertXPrev = reduceInsertXPrevinsertYPrev = reduceInsertYPrevinsertZPrev = reduceInsertZPrevhypotenuse2D = reduceHypotenuse2Dhypotenuse3D = reduceHypotenuse3Dalpha2D = reduceAlpha2Dalpha3D = reduceAlpha3D! ---------------------------------------------------------------------- !! === GIVE PARAMETER ARRAYS THEIR REDUCED VALUES ===PARAMETERS a = a, !<--- this just to keep the parameter arrays in next lines.			points = points,			x = x,			y = y,			z = z,			insertX = insertX,			insertY = insertY,			insertZ = insertZ,			insertXPrev = insertX,			insertYPrev = insertY,			insertZPrev = insertZ,			hypotenuse2D = hypotenuse2D,			hypotenuse3D = hypotenuse3D,			alpha2D = alpha2D,			alpha3D = alpha3D! === HIDEPARAMETERS ===IF NOT(show3D) THEN	HIDEPARAMETER "movableZ", "linetype3D", "dashLen", "gapLen", "bTxtUpright"ENDIFIF linetype3D THEN	HIDEPARAMETER "dashLen", "gapLen"ENDIFIF bThreshold THEN	HIDEPARAMETER "nThreshold"ENDIFIF NOT(useConstraint) THEN HIDEPARAMETER 'constraint'! === LOCKS ===IF NOT(unlockData) THEN	LOCK	'x','y','z'	LOCK 	'insertX','insertY','insertZ',			'insertXPrev','insertYPrev','insertZPrev'	LOCK	'hypotenuse2D','hypotenuse3D'	LOCK	'alpha2D','alpha3D'	LOCK	'fullLength','fullLength3D'ENDIF