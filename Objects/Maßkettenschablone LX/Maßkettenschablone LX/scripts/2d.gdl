!--- 2d script ---!uID = 1if GLOB_CONTEXT # 8 then  ! not layout	define style "styleleft" font, font_size, TXTANCHOR.midleft, 0	define style "styleright" font, font_size, TXTANCHOR.midright, 0	set style "styleleft"	! ::: Frame :::	if build_contour then		gosub "Contour"	endif	! ::: Corner Points	if b_corner_pt then		gosub "Marker"		circle2  0, 0, 2*cl		add2 A, 0		gosub "Marker"		circle2  0, 0, 2*cl		del 1		add2 A, B		gosub "Marker"		circle2  0, 0, 2*cl		del 1		add2 0, B		gosub "Marker"		circle2  0, 0, 2*cl		del 1		hotspot2  0, 0		hotspot2  A, 0		hotspot2  A, B		hotspot2  0, B	endif		! ::: Dimension Points :::	! (we start in lower left corner)	! :: top	add2 0, B  ! --{ transformation stack begin	index = 1 : side = A : gosub "Dim_Points"	type = 1 : gosub "Dim_Text"	del 1	! :: bottom	add2 A, 0	rot2 180	if b_dim_dist_same then index = 1 else index = 2	side = A : gosub "Dim_Points"	type = -1 : gosub "Dim_Text"	del 2	! :: left	rot2 90	if b_dim_dist_same then index = 1 else index = 3	side = B : gosub "Dim_Points"	type = 1 : gosub "Dim_Text"	del 1	! :: right	add2 A, B	rot2 -90	if b_dim_dist_same then index = 1 else index = 4	side = B : gosub "Dim_Points"	type = -1 : gosub "Dim_Text"	del 2 ! --} tx stack end	endifEND ! -- END -- END -- END -- END -- END -- !! ----------------------------------------------------------------- !"Dim_Points":! Places the Dimensioning Points in the floor plan.! input:	index! 			side	! left hotspots; first is moveable	hs_x_coor = 0	gosub "Hotspot_Movedim"	hs_x_coor = side	gosub "Hotspot_Movedim"		add2 0, dim_dist[index]	gosub "Marker"	add2 side, 0	gosub "Marker"	del 1	! Regular Hotspots	for i = 1 to n_dims-1		add2 0, dim_dim_dist		gosub "Hotspot_Marker"		add2 side, 0		gosub "Hotspot_Marker"		del 1  ! delete the move to the right	next i	del n_dims  ! --} delete the rest of the tx stackreturn! ----------------------------------------------------------------- !"Dim_Text":	if b_text then		add2 0, dim_dist[index]		for _idx = 1 to n_dims			if type < 0 then				! reversed; bottom and right				rot2 180				set style "styleright"			endif			gosub "Text" + str(_idx, 1, 0)			if type < 0 then 				del 1				set style "styleleft"			endif			add2 0, dim_dim_dist		next _idx		del n_dims+1	endifreturn"Text1":	text2 -dist_text * type, 0, dim_text_1return"Text2":	text2 -dist_text * type, 0, dim_text_2return"Text3":	text2 -dist_text * type, 0, dim_text_3return"Text4":	text2 -dist_text * type, 0, dim_text_4return"Text5":	text2 -dist_text * type, 0, dim_text_5return"Text6":	text2 -dist_text * type, 0, dim_text_6return"Text7":	text2 -dist_text * type, 0, dim_text_7return"Text8":	text2 -dist_text * type, 0, dim_text_8return"Text9":	text2 -dist_text * type, 0, dim_text_9return"Text10":	text2 -dist_text * type, 0, dim_text_10return! ----------------------------------------------------------------- !"Hotspot_Movedim":	hotspot2  hs_x_coor, 0, 				uID, dim_dist[index], 1 + 128	: uID=uID+1	hotspot2  hs_x_coor, dim_dist[index], 	uID, dim_dist[index], 2			: uID=uID+1	hotspot2  hs_x_coor, -1, 				uID, dim_dist[index], 3			: uID=uID+1return! ----------------------------------------------------------------- !"Hotspot_Marker":	gosub "Marker"	hotspot2  0, 0return! ----------------------------------------------------------------- !"Marker":	if b_marker then		line2  -cl, -cl,  cl, cl		line2  -cl, cl,  cl, -cl	endifreturn! ------------------------------Kontur Gebäude------------------------- !	"Contour":	line2  0, 0,  A, 0	line2  0, 0,  0, B	line2  0, B,  A, B	line2  A, 0,  A, B	hotline2  0, 0,  A, 0	hotline2  0, 0,  0, B	hotline2  0, B,  A, B	hotline2  A, 0,  A, Breturn