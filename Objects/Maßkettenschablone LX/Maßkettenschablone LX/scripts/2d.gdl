!--- 2d script ---!

fill 	GLOB_FILL_INDEX_SOLID
pen 	gs_cont_pen
! have a white pen ready
rrr = request("Pen_of_RGB", "1 1 1", _whitepen)

! make the backfill slightly bigger than the text
bfill_large = 1 * model_to_paper

uID = 1

if GLOB_CONTEXT # 8 then  ! not layout

	define style "styleleft" 	font, font_size, TA.mid.left, font_style
	define style "styleright" 	font, font_size, TA.mid.right, font_style
	set style "styleleft"

	! ::: Frame :::
	if build_contour then
		gosub "Contour"
	endif

	! ::: Corner Points
	if b_corner_pt then
		gosub "Marker"
		circle2  0, 0, 2*marker_size
		add2 A, 0
		gosub "Marker"
		circle2  0, 0, 2*marker_size
		del 1
		add2 A, B
		gosub "Marker"
		circle2  0, 0, 2*marker_size
		del 1
		add2 0, B
		gosub "Marker"
		circle2  0, 0, 2*marker_size
		del 1

		hotspot2  0, 0
		hotspot2  A, 0
		hotspot2  A, B
		hotspot2  0, B
	endif
	
	! ::: Dimension Points :::
	! `index` is the side, but stays at "1" if the dim-dim distance is set to "same"
	! `side` is the direction, either "A" or "B"
	! `type` determines if the text is left or right aligned+

	! :: top
	! (we start in lower left corner)
	add2 0, B  ! --{ transformation stack begin
	index = 1 : side = A : gosub "Dim_Points"
	type = 1 : gosub "Dim_Text"
	del 1
	! :: bottom
	add2 A, 0
	rot2 180
	if b_dim_dist_same then index = 1 else index = 2
	side = A : gosub "Dim_Points"
	type = -1 : gosub "Dim_Text"
	del 2
	! :: left
	rot2 90
	if b_dim_dist_same then index = 1 else index = 3
	side = B : gosub "Dim_Points"
	type = 1 : gosub "Dim_Text"
	del 1
	! :: right
	add2 A, B
	rot2 -90
	if b_dim_dist_same then index = 1 else index = 4
	side = B : gosub "Dim_Points"
	type = -1 : gosub "Dim_Text"
	del 2 ! --} tx stack end
else
	text2 0, 0, "Bitte im Plan platzieren"
endif

END ! -- END -- END -- END -- END -- END -- !

! ----------------------------------------------------------------- !
"Dim_Points":
! Places the Dimensioning Points in the floor plan.
! input:	index
! 			side
	! left hotspots; first is moveable
	hs_x_coor = 0
	gosub "Hotspot_Movedim"
	hs_x_coor = side
	gosub "Hotspot_Movedim"
	
	add2 0, dim_dist[index]
	gosub "Marker"
	add2 side, 0
	gosub "Marker"
	del 1
	! Regular Hotspots
	for i = 1 to n_dims-1
		add2 0, dim_dim_dist
		gosub "Hotspot_Marker"
		add2 side, 0
		gosub "Hotspot_Marker"
		del 1  ! delete the move to the right
	next i

	del n_dims  ! --} delete the rest of the tx stack
return


! ----------------------------------------------------------------- !
"Dim_Text":
	if b_text then
		add2 0, dim_dist[index]
		for _idx = 1 to n_dims
			if type < 0 then
				! reversed; bottom and right
				rot2 180
				set style "styleright"
			endif
			! gosub "Text" + str(_idx, 1, 0)
			gosub "Text"
			if type < 0 then 
				del 1
				set style "styleleft"
			endif
			add2 0, dim_dim_dist
		next _idx
		del n_dims+1
	endif
return

"Text":
	if dim_text[_idx] # "" then
		add2 	-dist_text * type, 0
		text2 	0, 0, dim_text[_idx]

		if b_backfill then
			! make backfill so the text is better visible
			_strw = stw(dim_text[_idx]) * model_to_paper
			_strw = _strw + bfill_large

			rrr = request("Height_of_style", "styleright", _strh)
			_strh = _strh * model_to_paper + bfill_large

			! adjust to have the fill in the right place
			add2 	-type * bfill_large/2, (-_strh/2) + (0.5*model_to_paper)
			mul2 	type, 1
			poly2_b 	5, 2+4,
						_whitepen, -1,
						0, 0, 1,
						0, _strh, 1,
						_strw, _strh, 1,
						_strw, 0, 1,
						0, 0, -1
			del 2
		endif
		del 1
	endif
return

! ----------------------------------------------------------------- !
"Hotspot_Movedim":
	hotspot2  hs_x_coor, 0, 				uID, dim_dist[index], 1 + 128	: uID=uID+1
	hotspot2  hs_x_coor, dim_dist[index], 	uID, dim_dist[index], 2			: uID=uID+1
	hotspot2  hs_x_coor, -1, 				uID, dim_dist[index], 3			: uID=uID+1
return

! ----------------------------------------------------------------- !
"Hotspot_Marker":
	gosub "Marker"
	hotspot2  0, 0
return

! ----------------------------------------------------------------- !
"Marker":
	if b_marker then
		line2  -marker_size, -marker_size,  marker_size, marker_size
		line2  -marker_size, marker_size,  marker_size, -marker_size
	endif
return

! ------------------------------Kontur Gebäude------------------------- !	
"Contour":
	line2  0, 0,  A, 0
	line2  0, 0,  0, B
	line2  0, B,  A, B
	line2  A, 0,  A, B
	hotline2  0, 0,  A, 0
	hotline2  0, 0,  0, B
	hotline2  0, B,  A, B
	hotline2  A, 0,  A, B
return