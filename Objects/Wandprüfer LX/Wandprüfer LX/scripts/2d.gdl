!--- 2D script ---!comma = strstr(max_deviation_str, ",")  	! beware of german notation!if comma then	wtf = "0." + strsub(max_deviation_str, comma+1, strlen(max_deviation_str))else	wtf = max_deviation_strendifn = split(wtf, "%n", max_deviation) 	! this is done so the input param doesn't get truncateddict resultresult.text = ""result.status = 0str_format = "%." + str(precision, 1, 0)! -- define Text styletxt_anchor = 7if AC_LabelPointerConnection = 1 then txt_anchor = 1if AC_LabelPointerConnection = 0 then txt_anchor = 4if AC_LabelPointerConnection = 2 then txt_anchor = 7if not(LABEL_HAS_POINTER) then	txt_anchor = 8	add2  LABEL_POSITION [2][1]	+ LABEL_POSITION [3][1],		  LABEL_POSITION [2][2]	+ LABEL_POSITION [3][2]endifdefine style "label_text_style" 	AC_TextFont_1, AC_TextSize_1*100/GLOB_SCALE, txt_anchor, AC_TextStyle_1set style "label_text_style"! -- get some colorsr = request("Pen_of_RGB", "1 0 0", pen_red)r = request("Pen_of_RGB", "0 1 0", pen_green)r = request("Pen_of_RGB", "1 0.596 0", pen_orange)! -- angle computationangleViewRotation = 0if reference = 1 then angleViewRotation = GLOB_NORTH_DIRif reference = 2 then	r = request("view_rotangle", "", angleViewRotation)endifif reference = 3 then angleViewRotation = ang_free 	! free choice of a system angle_compangle = WALL_DIRECTION + angleViewRotationif _compangle < 0 then _compangle = _compangle + 360n = int(_compangle/grid + 0.5)gridangle = grid*ndeviation = abs(_compangle - gridangle)deviation_str = str(str_format, deviation) + "°"! -- making the resultif GLOB_ELEM_TYPE # 5 then	result.text = "Keine Wand etikettiert ¯\_(ツ)_/¯"	result.status = -1else	if WALL_RESOL > 36 or WALL_INCL > 0 then		result.text = "Wand gebogen/trapezförmig (" + deviation_str + ")"		result.status = -1	else		if deviation > max_deviation then			result.text = "⚠! " + deviation_str			result.status = 1		else			result.text = "Ok. (" + deviation_str + ")"			result.status = 0		endif	endifendif! -- displayif b_use_color then	if result.status > 0 then pen pen_red	if result.status < 0 then pen pen_orange	if result.status = 0 then pen pen_greenelse	pen AC_TextPen_1 	! pen for text of the text settings dialogendifhotspot2 0, 0text2 0,0.1, result.textif not(LABEL_HAS_POINTER) then 	fill 	GLOB_FILL_INDEX_SOLID	poly2_  4,1+2+4,			-0.1, 0.05, 1,			0.1, 0.05, 1,			0, -0.1, 1,			-1, -1, 701endif