!--- 2D script ---!n_total_lt = vardim1(ltype.real_id) 	! causes warning in MasterunID = 1font_size = (dist/3)*1000/GLOB_SCALEdefine style  "st1_headline"  fontType, font_size*1.5, 7, 0set style  "st1_headline"pen  pen_texttext2  0, dist+0.1, text_h1define style{2}  "st2_default"  fontType, A*50/GLOB_SCALE, 1define style  "st1_linetype"  fontType, font_size, 4, 0if display_type = 1 then 	gosub "Hline"else	gosub "Polyform"endifEND ! --- END --- END --- END --- END --- END --- !! ------------------------------------------------------------------------"Hline":	set style  "st1_linetype"	! -- Hotspots:	hotspot2 0, 0, unID									: unID=unID+1	hotspot2 0, -(n_total_lt-1) * dist, unID			: unID=unID+1	hotspot2 line_length, -(n_total_lt-1) * dist, unID	: unID=unID+1	! line width	hotspot2 0,		0,			unID, line_length, 1 + 128	: unID=unID+1	hotspot2 line_length,	0,	unID, line_length, 2		: unID=unID+1	hotspot2 -1,	0,			unID, line_length, 3		: unID=unID+1	! line distance (vertically)	hotspot2 line_length/2,		0,	unID, dist, 1 + 128	: unID=unID+1	hotspot2 line_length/2,	-dist,	unID, dist, 2		: unID=unID+1	hotspot2 line_length/2,	1,		unID, dist, 3		: unID=unID+1	add2  line_length + 0.25, dist	text2 0, 0, "#ID | Linientyp-Name"	del 1	for i=1 to n_total_lt		hotspot2 0, 0, unID										: unID=unID+1		pen  pen_text		add2  line_length + 0.25, 0		text2 0, 0, str(ltype.real_id[i], 1,0) + " | " + ltype.name[i]		del 1		pen  pen_lines		line_type	ltype.real_id[i]		line2	0, 0,	line_length, 0		add2 	0, -dist	next ireturn! ------------------------------------------------------------------------"Polyform":	set style "st2_default"	size = A	max_width = B	! -- Hotspots:	hotspot2  0, 0	! size	hotspot2 0,	0,	unID, A, 1 + 128	: unID=unID+1	hotspot2 A,	0,	unID, A, 2			: unID=unID+1	hotspot2 -1,0,	unID, A, 3			: unID=unID+1	! max width	hotspot2 0,	0,	unID, B, 1 + 128	: unID=unID+1	hotspot2 B,	0,	unID, B, 2			: unID=unID+1	hotspot2 -1, 0,	unID, B, 3			: unID=unID+1	! dist	hotspot2 size,		-size/2,	unID, dist, 1 + 128	: unID=unID+1	hotspot2 size+dist,	-size/2,	unID, dist, 2		: unID=unID+1	hotspot2 -1, 		-size/2,	unID, dist, 3		: unID=unID+1	! polyform coordinates	szquart = size/4	put 	0, -size, 1,  ! start at lower left			0, -szquart, 1,			szquart, 0, 1001,			size, 0, 1,  ! top right			size, -szquart, 1,			szquart, -szquart, 900,			szquart, -size, 3001,			-1, -1, 701  ! close	poly_flag = 1+4	cols = 0	rows = 0		for i=1 to n_total_lt		pen  pen_lines		line_type	ltype.real_id[i]		! First let's test if we would go wider than the specified width		if i#1 and ((size + dist) * cols + size) > max_width then			del cols			cols = 0			add2 0, -(size + dist)  ! next row			rows = rows + 1		endif		poly2_  nsp/3, poly_flag,				use(nsp)		paragraph "lt_name" 2, 0, 0, 0, 1			pen pen_text			str(ltype.real_id[i], 1,0)			"\n"			ltype.name[i]		endparagraph		textblock "textblock_lt_name" 	A*1000/GLOB_SCALE, 2, 0, 1, 1, 1,			"lt_name"		richtext2 size/2, -szquart, "textblock_lt_name"				add2  size + dist, 0		cols = cols + 1	next i	del ntr()	hotspot2  0, -(rows * (size + dist) + size)	hotspot2  max_width, -(rows * (size + dist) + size)return