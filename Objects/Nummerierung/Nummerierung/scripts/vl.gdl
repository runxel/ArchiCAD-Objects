! PARAM !values{2} "number_type" 1, `Ziffern (1, 2, 3, …)`,    !decimal                        2, `römisch (i, ii, iii, …)`, !roman                        3, `Buchstaben (a, b, c, …)`  !alphavalues  "prefix"  "(", "Box", "Nr.", CUSTOMvalues  "suffix"  ")", CUSTOMvalues  "pen_text"     RANGE [1,255]values  "frame_pen"    RANGE [1,255]values  "gs_fill_pen"  RANGE [1,255]lock "n_part"parameters n_part = runs! numbers have no upper caseif number_type = 1 then	b_upper = 0    parameters b_upper = b_upper    lock "b_upper"endifif not(b_frame) then    lock "frame_pen"endifif not(b_fill) then    lock "fill_type", "gs_fill_pen", "gs_back_pen"endif! no negative numbers for non numeralsif number_type > 1 AND n_begin < 1 then    n_begin = 1    parameters n_begin = n_begin    values  "n_begin_"  RANGE (1,)endif! prevent end being smaller than beginif n_end < n_begin then    n_begin = 1    parameters n_begin = n_begin    n_end = 4    parameters n_end = n_endendif! refresh `distance` paramif GLOB_MODPAR_NAME = "b_divide" or GLOB_MODPAR_NAME = "A" then    if b_divide then        distance = A/runs        parameters distance = distance    else        distance = A*runs        parameters distance = distance    endifendif! refresh endif GLOB_MODPAR_NAME = "distance" then    if b_divide then        runs = int(A/distance + eps)        n_end = n_begin + runs*n_step        parameters n_end = n_end    else        runs = int(distance/A + eps)        n_end = n_begin + runs*n_step        parameters n_end = n_end    endifendif    if b_divide then	m = int(A / hk*1.35)    for m = m to 1 step -1        put A/m    next m    values "distance" get(nsp)else    values "distance" RANGE (0,) STEP A, Aendif